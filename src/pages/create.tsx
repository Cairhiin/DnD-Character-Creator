import { ReactNode, useState } from "react";
import Head from "next/head";
import { characterStore } from "@/store";
import type { CharacterDescription } from "@/types";
import styles from "@/styles/Create.module.scss";
import CreateCharacterTabs from "@/components/CreateCharacter";

interface CardProps {
  children: ReactNode;
  header: string;
}

export const CreateClassCard = ({ children, header }: CardProps) => {
  return (
    <div className={styles.create__card}>
      <h2 className={styles.create__card__header}>{header}</h2>
      <div className={styles.create__card__content}>{children}</div>
    </div>
  );
};

export default function Home() {
  const [activeTabIndex, setActiveTabIndex] = useState<number>(1);
  const { race, dndClass, abilityScores, description, skills } = characterStore(
    (state) => state
  );
  const {
    background,
    details,
    physical,
    personal,
    notes,
  }: CharacterDescription = description;

  const setActiveIndex = (e: any) => {
    setActiveTabIndex(parseInt(e.dataset.tabId));
  };

  const nextTab = (): void => {
    setActiveTabIndex((prevIndex) =>
      prevIndex < 6 ? prevIndex + 1 : prevIndex
    );
  };

  const previousTab = (): void => {
    setActiveTabIndex((prevIndex) =>
      prevIndex > 1 ? prevIndex - 1 : prevIndex
    );
  };

  return (
    <>
      <Head>
        <title>D&D Character Creator | Create new character</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <nav className={styles.nav}>
          <div className={styles.create__topbar}>
            <ul
              onClick={(e: React.MouseEvent<HTMLElement>) =>
                setActiveIndex(e.target as any)
              }
            >
              <li data-tab-id="1">1. Race</li>
              <li data-tab-id="2">2. Class</li>
              <li data-tab-id="3">3. Abilities</li>
              <li data-tab-id="4">4. Description</li>
              <li data-tab-id="5">5. Equipment</li>
            </ul>
          </div>
        </nav>
        <section className={styles.create__main}>
          <div></div>
          <aside className={styles.create__chardata}>
            {/*<div>
              <h3>{race.name}</h3>
              <p>{race.name}</p>
            </div>
            <div>
              <h3>CLASS</h3>
              <p>{dndClass.name}</p>
            </div>
            <div>
              <p>STR: {abilityScores.STR}</p>
              <p>DEX: {abilityScores.DEX}</p>
              <p>CON: {abilityScores.CON}</p>
              <p>INT: {abilityScores.INT}</p>
              <p>WIS: {abilityScores.WIS}</p>
              <p>CHA: {abilityScores.CHA}</p>
            </div>
            <div>
              {Object.keys(skills).map((skill: string) => (
                <p key={skill}>
                  {skill}: {(skills as any)[skill] === true ? "1" : "0"}
                </p>
              ))}
            </div>
            <div>
              <div>
                <div>
                  <h3>BACKGROUND</h3>
                  <p>{background}</p>
                </div>
                <div>
                  <h3>DETAILS</h3>
                  <p>
                    {Object.keys(details).map((attr: string) => (
                      <p>{(details as any)[attr]}</p>
                    ))}
                  </p>
                </div>
                <div>
                  <h3>PHYSICAL APPEARANCE</h3>
                  <p>
                    {Object.keys(physical).map((attr: string) => (
                      <p>{(physical as any)[attr]}</p>
                    ))}
                  </p>
                </div>
                <div>
                  <h3>PERSONAL CHARACTERISTICS</h3>
                  <p>
                    {Object.keys(personal).map((attr: string) => (
                      <p>{(personal as any)[attr]}</p>
                    ))}
                  </p>
                </div>
                <div>
                  <h3>NOTES</h3>
                  <p>
                    {Object.keys(notes).map((attr: string) => (
                      <p>{(notes as any)[attr]}</p>
                    ))}
                  </p>
                </div>
              </div>
            </div> */}
          </aside>
          <aside className={styles.create__choices}>
            <div className={styles.create__tabs}>
              <CreateCharacterTabs
                activeIndex={activeTabIndex}
                nextTab={nextTab}
                previousTab={previousTab}
              />
            </div>
          </aside>
          <div></div>
        </section>
      </div>
    </>
  );
}
