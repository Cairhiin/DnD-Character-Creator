import Head from 'next/head';
import Link from 'next/link';
import styles from '@/styles/auth/Profile.module.scss';
import { getServerSession } from 'next-auth';
import { authOptions } from "@/pages/api/auth/[...nextauth]"
import { useSession } from "next-auth/react"
import { useState, useEffect } from "react";

export default function Profile() {
    const { data: session } = useSession();

    /* 
        SOLUTION FOR HYDRATION ERROR: 
        https://stephencook.dev/blog/using-window-in-react-ssr/
    */
    const useIsSsr = () => {
        const [isSsr, setIsSsr] = useState(true);

        useEffect(() => {
            setIsSsr(false);
        }, []);

        return isSsr;
    }

    if ( useIsSsr() ) return null;

    if (session) {
        const { user } = session;
        return (
            <>
                <Head>
                    <title>D&D Character Creator | Profile</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <div className={styles.main}>
                    <h1 className={styles.header}>Profile</h1>
                    <p>{ user?.name }</p>
                    <p>{ user?.email }</p>
                    <p>{ user?.username }</p>
                </div>
            </>
        );
    }

    return (
        <>
            <Head>
                <title>D&D Character Creator | Access Denied</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={styles.main}>
                <h2 className={styles.header}>Access Denied. </h2>
                <p>Have an account already? <Link href="/auth/login">Login</Link>.</p>
                <p>Don't have an account yet? <Link href="/auth/register">Register</Link>.</p>
            </div>
        </>
    );
}

export async function getServerSideProps(context: any) {
    return {
        props: {
            session: await getServerSession(
                context.req,
                context.res,
                authOptions
            )
        }
    }
}